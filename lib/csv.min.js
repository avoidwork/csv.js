/* 2017 Jason Mulligan <jason.mulligan@avoidwork.com> */

"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a};!function(a){function b(a){var b=void 0,c=void 0;return b=null===a||void 0===a?void 0:"true"===a||"false"!==a&&("null"===a?null:"undefined"===a?void 0:""===a?a:isNaN(c=Number(a))?j.test(a)?e(a):a:c)}function c(a){for(var c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",",d=new RegExp(c+'(?=(?:[^"]|"(?:[^"])[^"]*")*$)'),e=p(a).split("\n"),f=e.shift().split(c),g=[],h=e.length,i=f.length,j=-1;++j<h;){for(var k={},l=e[j].split(d),m=-1;++m<i;)k[f[m]]=b(l[m]||"");g.push(k)}return g}function d(a){var b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",",c=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],g=arguments[3],i=e(a),j="",k=void 0;return i instanceof Array?i[0]instanceof Object?(c&&(k=o(i[0]),j=k.join(b)+"\n"),j+=i.map(function(a){return d(a,b,!1,k)}).join("\n")):j+=f(i,b)+"\n":(c?(k=o(i,g),j=k.join(b)+"\n"):k=g,j+=m(i,!1,k).map(function(a){return f(a,b)}).join(b)+"\n"),j.replace(h,"")}function e(a){try{return JSON.parse(a)}catch(b){return a}}function f(a,b){var c=void 0;return a instanceof Array?(c='"'+a.toString()+'"',i.test(c)&&(c='"'+d(a,b)+'"')):c=a instanceof Object?'"'+d(a,b)+'"':a,c}var g=/msie|ie/i,h=/(\n|\r)$/,i=/\[object Object\]/,j=/^[\[\{]/,k=a.navigator,l=!!k&&g.test(k.userAgent),m=(l?parseInt(k.userAgent.replace(/(.*msie|;.*)/gi,""),10):null,function(a){var b=arguments.length>1&&void 0!==arguments[1]&&arguments[1],c=arguments[2],d=void 0;return Array.isArray(a)?d=Array.from(a):b?d=o(a,c):(d=[],n(a,function(a){return d.push(a)},c)),d}),n=function(a,b,c){if("function"!=typeof b)throw new Error("Invalid arguments");return(c||Object.keys(a)).forEach(function(c){return b.call(a,a[c],c)}),a},o=function(a,b){return void 0!==b?b.map(function(b){return a[b]}):Object.keys(a)},p=function(a){return a.replace(/^(\s+|\t+)|(\s+|\t+|\n+)$/g,"")},q={decode:c,encode:d,version:"1.0.3"};"undefined"!=typeof exports?module.exports=q:"function"==typeof define&&void 0!==_typeof(define.amd)?define(function(){return q}):a.csv=q}("undefined"!=typeof window?window:global);
//# sourceMappingURL=csv.min.js.map