{"version":3,"sources":["csv.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","global","coerce","value","tmp","undefined","isNaN","Number","REGEX_JSON","test","parse","decode","arg","delimiter","arguments","length","regex","RegExp","rows","trim","split","keys","shift","result","nth","x","i","n","row","replace","push","encode","header","keyRef","ref","Array","Object","join","map","prepare","cast","REGEX_NL","JSON","e","input","output","toString","REGEX_OBJTYPE","REGEX_QUOTE","REGEX_IE","navigator","ie","userAgent","version","parseInt","key","o","iterate","slice","call","idx","fn","Error","forEach","has","hasOwnProperty","v","k","iface","exports","module","define","amd","csv","window"],"mappings":"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","file":"csv.min.js","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Simplify encoding & decoding CSV\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2017\n * @license BSD-3-Clause\n * @version 1.0.3\n */\n(function (global) {\n\t\"use strict\";\n\n\tvar REGEX_IE = /msie|ie/i,\n\t    REGEX_NL = /(\\n|\\r)$/,\n\t    REGEX_OBJTYPE = /\\[object Object\\]/,\n\t    REGEX_JSON = /^[\\[\\{]/,\n\t    REGEX_QUOTE = /^\\s|\\\"|\\n|,|\\s$/,\n\t    navigator = global.navigator,\n\t    ie = navigator ? REGEX_IE.test(navigator.userAgent) : false,\n\t    version = ie ? parseInt(navigator.userAgent.replace(/(.*msie|;.*)/gi, \"\"), 10) : null;\n\n\t/**\n  * Returns an Object ( NodeList, etc. ) as an Array\n  *\n  * @method cast\n  * @param  {Object}  obj Object to cast\n  * @param  {Boolean} key [Optional] Returns key or value, only applies to Objects without a length property\n  * @return {Array}       Object as an Array\n  */\n\tvar cast = function () {\n\t\tif (!ie || version > 8) {\n\t\t\treturn function (obj) {\n\t\t\t\tvar key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\t\t\tvar ref = arguments[2];\n\n\t\t\t\tvar o = [];\n\n\t\t\t\tif (!isNaN(obj.length)) {\n\t\t\t\t\to = Array.prototype.slice.call(obj);\n\t\t\t\t} else {\n\t\t\t\t\tkey ? o = keys(obj, ref) : iterate(obj, function (i) {\n\t\t\t\t\t\treturn o.push(i);\n\t\t\t\t\t}, ref);\n\t\t\t\t}\n\n\t\t\t\treturn o;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function (obj) {\n\t\t\t\tvar key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\t\t\tvar ref = arguments[2];\n\n\t\t\t\tvar o = [];\n\n\t\t\t\tif (!isNaN(obj.length)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\to = Array.prototype.slice.call(obj);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\titerate(obj, function (i, idx) {\n\t\t\t\t\t\t\tif (idx !== \"length\") {\n\t\t\t\t\t\t\t\to.push(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tkey ? o = keys(obj, ref) : iterate(obj, function (i) {\n\t\t\t\t\t\treturn o.push(i);\n\t\t\t\t\t}, ref);\n\t\t\t\t}\n\n\t\t\t\treturn o;\n\t\t\t};\n\t\t}\n\t}();\n\n\t/**\n  * Coerces a String to a Type\n  *\n  * @method coerce\n  * @memberOf utility\n  * @param  {String} value String to coerce\n  * @return {Mixed}        Primitive version of the String\n  */\n\tfunction coerce(value) {\n\t\tvar tmp = void 0;\n\n\t\tif (value === null || value === undefined) {\n\t\t\treturn undefined;\n\t\t} else if (value === \"true\") {\n\t\t\treturn true;\n\t\t} else if (value === \"false\") {\n\t\t\treturn false;\n\t\t} else if (value === \"null\") {\n\t\t\treturn null;\n\t\t} else if (value === \"undefined\") {\n\t\t\treturn undefined;\n\t\t} else if (value === \"\") {\n\t\t\treturn value;\n\t\t} else if (!isNaN(tmp = Number(value))) {\n\t\t\treturn tmp;\n\t\t} else if (REGEX_JSON.test(value)) {\n\t\t\treturn parse(value);\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/**\n  * Converts CSV to an Array of Objects\n  *\n  * @method decode\n  * @param  {String} arg       CSV string\n  * @param  {String} delimiter [Optional] Delimiter to split columns on, default is \",\"\n  * @return {Array}            Array of Objects\n  */\n\tfunction decode(arg) {\n\t\tvar delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n\n\t\tvar regex = new RegExp(delimiter + \"(?=(?:[^\\\"]|\\\"(?:[^\\\"])[^\\\"]*\\\")*$)\"),\n\t\t    rows = trim(arg).split(\"\\n\"),\n\t\t    keys = rows.shift().split(delimiter),\n\t\t    result = [],\n\t\t    nth = rows.length,\n\t\t    x = keys.length;\n\n\t\tvar i = -1,\n\t\t    n = void 0,\n\t\t    obj = void 0,\n\t\t    row = void 0;\n\n\t\twhile (++i < nth) {\n\t\t\tobj = {};\n\t\t\trow = rows[i].split(regex);\n\n\t\t\tn = -1;\n\t\t\twhile (++n < x) {\n\t\t\t\tobj[keys[n]] = coerce((row[n] || \"\").replace(/^\"|\"$/g, \"\"));\n\t\t\t}\n\n\t\t\tresult.push(obj);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n  * Encodes `arg` as CSV\n  *\n  * @method encode\n  * @param  {String}  arg       Array, Object or JSON String to transform\n  * @param  {String}  delimiter [Optional] Character to separate fields\n  * @param  {Boolean} header    [Optional] False to not include field names as first row\n  * @return {String}            CSV string\n  */\n\tfunction encode(arg) {\n\t\tvar delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n\t\tvar header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\tvar keyRef = arguments[3];\n\n\t\tvar obj = parse(arg);\n\t\tvar result = \"\",\n\t\t    ref = void 0;\n\n\t\tif (obj instanceof Array) {\n\t\t\tif (obj[0] instanceof Object) {\n\t\t\t\tif (header) {\n\t\t\t\t\tref = keys(obj[0]);\n\t\t\t\t\tresult = ref.join(delimiter) + \"\\n\";\n\t\t\t\t}\n\n\t\t\t\tresult += obj.map(function (i) {\n\t\t\t\t\treturn encode(i, delimiter, false, ref);\n\t\t\t\t}).join(\"\\n\");\n\t\t\t} else {\n\t\t\t\tresult += prepare(obj, delimiter) + \"\\n\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (header) {\n\t\t\t\tref = keys(obj, keyRef);\n\t\t\t\tresult = ref.join(delimiter) + \"\\n\";\n\t\t\t} else {\n\t\t\t\tref = keyRef;\n\t\t\t}\n\n\t\t\tresult += cast(obj, false, ref).map(function (i) {\n\t\t\t\treturn prepare(i, delimiter);\n\t\t\t}).join(delimiter) + \"\\n\";\n\t\t}\n\n\t\treturn result.replace(REGEX_NL, \"\");\n\t}\n\n\t/**\n  * Iterates an Object and executes a function against the properties,\n  * & can be halted by returning `false` from `fn`\n  *\n  * @method iterate\n  * @param  {Object}   obj Object to iterate\n  * @param  {Function} fn  Function to execute against properties\n  * @return {Object}       Object\n  */\n\tvar iterate = function () {\n\t\tif (typeof Object.keys == \"function\") {\n\t\t\treturn function (obj, fn, keyRef) {\n\t\t\t\tif (typeof fn != \"function\") {\n\t\t\t\t\tthrow new Error(\"Invalid arguments\");\n\t\t\t\t}\n\n\t\t\t\t(keyRef || Object.keys(obj)).forEach(function (i) {\n\t\t\t\t\treturn fn.call(obj, obj[i], i);\n\t\t\t\t});\n\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function (obj, fn, keyRef) {\n\t\t\t\tvar has = Object.prototype.hasOwnProperty;\n\n\t\t\t\tvar i = void 0,\n\t\t\t\t    result = void 0;\n\n\t\t\t\tif (typeof fn != \"function\") {\n\t\t\t\t\tthrow new Error(\"Invalid arguments\");\n\t\t\t\t}\n\n\t\t\t\tif (keyRef !== void 0) {\n\t\t\t\t\tkeyRef.forEach(function (i) {\n\t\t\t\t\t\treturn fn.call(obj, obj[i], i);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfor (i in obj) {\n\t\t\t\t\t\tif (has.call(obj, i)) {\n\t\t\t\t\t\t\tresult = fn.call(obj, obj[i], i);\n\n\t\t\t\t\t\t\tif (result === false) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t}();\n\n\t/**\n  * Returns the keys in an \"Associative Array\"\n  *\n  * @method keys\n  * @param  {Mixed} obj Array or Object to extract keys from\n  * @return {Array}     Array of the keys\n  */\n\tvar keys = function () {\n\t\tif (typeof Object.keys == \"function\") {\n\t\t\treturn function (obj, ref) {\n\t\t\t\tvar result = void 0;\n\n\t\t\t\tif (ref !== void 0) {\n\t\t\t\t\tresult = ref.map(function (i) {\n\t\t\t\t\t\treturn obj[i];\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresult = Object.keys(obj);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function (obj, ref) {\n\t\t\t\tvar result = void 0;\n\n\t\t\t\tif (ref !== void 0) {\n\t\t\t\t\tresult = ref.map(function (i) {\n\t\t\t\t\t\treturn obj[i];\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresult = [];\n\t\t\t\t\titerate(obj, function (v, k) {\n\t\t\t\t\t\treturn result.push(k);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t}();\n\n\t/**\n  * Parses the argument\n  *\n  * @method parse\n  * @param  {String} arg String to parse\n  * @return {Mixed}      Resulting from parsing JSON, or undefined\n  */\n\tfunction parse(arg) {\n\t\ttry {\n\t\t\treturn JSON.parse(arg);\n\t\t} catch (e) {\n\t\t\treturn arg;\n\t\t}\n\t}\n\n\t/**\n  * Prepares input based on CSV rules\n  *\n  * @method param\n  * @param  {Mixed}  input     Array, Object or String\n  * @param  {String} delimiter [Optional] Character to separate fields\n  * @return {String}           CSV formatted String\n  */\n\tfunction prepare(input, delimiter) {\n\t\tvar output = void 0;\n\n\t\tif (input instanceof Array) {\n\t\t\toutput = \"\\\"\" + input.toString() + \"\\\"\";\n\n\t\t\tif (REGEX_OBJTYPE.test(output)) {\n\t\t\t\toutput = \"\\\"\" + encode(input, delimiter) + \"\\\"\";\n\t\t\t}\n\t\t} else if (input instanceof Object) {\n\t\t\toutput = \"\\\"\" + encode(input, delimiter) + \"\\\"\";\n\t\t} else if (REGEX_QUOTE.test(input)) {\n\t\t\toutput = \"\\\"\" + input.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\";\n\t\t} else {\n\t\t\toutput = input;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\t/**\n  * Trims a string\n  *\n  * @method  trim\n  * @param  {String} arg String to trim\n  * @return {String}     Trimmed String\n  */\n\tfunction trim(arg) {\n\t\treturn arg.replace(/^(\\s+|\\t+)|(\\s+|\\t+|\\n+)$/g, \"\");\n\t}\n\n\t/**\n  * Interface\n  *\n  * @type {Object}\n  */\n\tvar iface = {\n\t\tdecode: decode,\n\t\tencode: encode,\n\t\tversion: \"1.0.3\"\n\t};\n\n\t// CommonJS, AMD, script tag\n\tif (typeof exports != \"undefined\") {\n\t\tmodule.exports = iface;\n\t} else if (typeof define == \"function\" && _typeof(define.amd) !== void 0) {\n\t\tdefine(function () {\n\t\t\treturn iface;\n\t\t});\n\t} else {\n\t\tglobal.csv = iface;\n\t}\n})(typeof window !== \"undefined\" ? window : global);\n"]}